{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createBlock(_component_el_table, {\n    data: _ctx.items,\n    style: {\n      \"width\": \"100%\"\n    },\n    \"show-header\": false\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"productname\",\n      label: \"商品名称\",\n      width: \"150\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"quantity\",\n      label: \"商品数量\",\n      width: \"120\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"price\",\n      label: \"商品价格\",\n      width: \"120\"\n    }), _createVNode(_component_el_table_column, {\n      fixed: \"right\",\n      label: \"Operations\",\n      width: \"120\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: () => {\n          _ctx.Buy(scope);\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"购买\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: () => {\n          _ctx.Delete(scope);\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"删除\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_dialog, {\n        title: \"付款\",\n        \"model-value\": _ctx.dialogVisible,\n        onClose: _cache[1] || (_cache[1] = $event => _ctx.dialogVisible = false)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          model: _ctx.address,\n          class: \"form-container\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"邮箱地址\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.address.mail,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.address.mail = $event)\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"model\"]), _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: () => {\n            _ctx.Pay(scope, _ctx.address);\n          }\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"付款\")]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"model-value\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_table","data","_ctx","items","style","_createVNode","_component_el_table_column","prop","label","width","fixed","default","_withCtx","scope","_component_el_button","link","type","size","onClick","Buy","Delete","_component_el_dialog","title","dialogVisible","onClose","_cache","$event","_component_el_form","model","address","class","_component_el_form_item","_component_el_input","mail","Pay"],"sources":["C:\\Users\\DELL\\Desktop\\网络应用开发课程设计\\vue-demo\\src\\components\\market\\Cart.vue"],"sourcesContent":["<script setup>\r\nimport {ref, onMounted, reactive} from \"vue\"\r\nimport axios from \"axios\";\r\nimport store from \"@/store\";\r\n\r\nconst Buy = (scope) => {\r\n  console.log(scope);\r\n  dialogVisible.value = true;\r\n}\r\n\r\n\r\nconst Pay = (scope, address) => {\r\n  console.log(scope.row);\r\n  var productid = scope.row.product.id;\r\n  var quantity = scope.row.quantity;\r\n  var product;\r\n  axios.get('/products', {params: {id: productid}})\r\n      .then(response => {\r\n        product = (response.data)[0];\r\n        const new_product = {\r\n          id: product.id,\r\n          name: product.name,\r\n          price: product.price,\r\n          description: product.description,\r\n          quantity: product.quantity - quantity,\r\n          imageUrl: product.imageUrl,\r\n        }\r\n        axios.put('/products', new_product)\r\n            .then(\r\n                response => {\r\n                  console.log(response.data);\r\n                  const buyinfo = {\r\n                    name: product.name,\r\n                    total_price: product.price * quantity,\r\n                    quantity: quantity,\r\n                    mail: address.mail\r\n                  }\r\n                  console.log(buyinfo);\r\n                  axios.post('/mail', buyinfo).then(response => {\r\n                    console.log(response.data)\r\n                    dialogVisible.value = false;\r\n                    const loginfo={\r\n                      scope.row.\r\n                    }\r\n                    axios.post('/log', loginfo).then(\r\n                        response => {\r\n                          console.log(response.data)\r\n                        })\r\n                  })\r\n                }\r\n            )\r\n      })\r\n\r\n\r\n}\r\n\r\nconst Delete = (item) => {\r\n  var id = item.row.cartid\r\n  console.log(item.row.cartid)\r\n  axios.delete(`/cart/${id}`)\r\n      .then(response => {\r\n        console.log(response)\r\n        // 删除成功后刷新数据\r\n        fetchData();\r\n      })\r\n      .catch(error => {\r\n        console.error(\"删除失败:\", error);\r\n      });\r\n};\r\n\r\nconst dialogVisible = ref(false)\r\n\r\nconst items = ref([])\r\n\r\nconst address = reactive({\r\n  mail: ''\r\n})\r\n\r\nconst fetchData = () => {\r\n  axios.get('/cart', {params: {username: store.state.user.username}})\r\n      .then(response => {\r\n        items.value = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error(\"导入购物车失败:\", error);\r\n      })\r\n};\r\n\r\nonMounted(fetchData)\r\n</script>\r\n\r\n<template>\r\n  <el-table\r\n      :data=\"items\"\r\n      style=\"width: 100%\"\r\n      :show-header=\"false\"\r\n  >\r\n    <el-table-column prop=\"productname\" label=\"商品名称\" width=\"150\"/>\r\n    <el-table-column prop=\"quantity\" label=\"商品数量\" width=\"120\"/>\r\n    <el-table-column prop=\"price\" label=\"商品价格\" width=\"120\"/>\r\n    <el-table-column fixed=\"right\" label=\"Operations\" width=\"120\">\r\n      <template #default=\"scope\">\r\n        <el-button link type=\"primary\" size=\"small\" @click=\"()=>{Buy(scope)}\">购买</el-button>\r\n        <el-button link type=\"primary\" size=\"small\" @click=\"()=>{Delete(scope)}\">删除</el-button>\r\n        <el-dialog\r\n            title=\"付款\"\r\n            :model-value=\"dialogVisible\"\r\n            @close=\"dialogVisible = false\">\r\n          <el-form :model=\"address\" class=\"form-container\">\r\n            <el-form-item label=\"邮箱地址\">\r\n              <el-input v-model=\"address.mail\"/>\r\n            </el-form-item>\r\n          </el-form>\r\n          <el-button type=\"primary\" @click=\"()=>{Pay(scope,address)}\">付款</el-button>\r\n        </el-dialog>\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n\r\n</template>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;;;;;;;;uBA4FEA,YAAA,CAyBWC,mBAAA;IAxBNC,IAAI,EAAEC,IAAA,CAAAC,KAAK;IACZC,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAClB,aAAW,EAAE;;sBAEhB,MAA8D,CAA9DC,YAAA,CAA8DC,0BAAA;MAA7CC,IAAI,EAAC,aAAa;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QACvDJ,YAAA,CAA2DC,0BAAA;MAA1CC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QACpDJ,YAAA,CAAwDC,0BAAA;MAAvCC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QACjDJ,YAAA,CAgBkBC,0BAAA;MAhBDI,KAAK,EAAC,OAAO;MAACF,KAAK,EAAC,YAAY;MAACC,KAAK,EAAC;;MAC3CE,OAAO,EAAAC,QAAA,CAAEC,KAAK,KACvBR,YAAA,CAAoFS,oBAAA;QAAzEC,IAAI,EAAJ,EAAI;QAACC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC,OAAO;QAAEC,OAAK,EAAAA,CAAA;UAAOhB,IAAA,CAAAiB,GAAG,CAACN,KAAK;QAAA;;0BAAI,MAAE,C,iBAAF,IAAE,E;;wDACxER,YAAA,CAAuFS,oBAAA;QAA5EC,IAAI,EAAJ,EAAI;QAACC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC,OAAO;QAAEC,OAAK,EAAAA,CAAA;UAAOhB,IAAA,CAAAkB,MAAM,CAACP,KAAK;QAAA;;0BAAI,MAAE,C,iBAAF,IAAE,E;;wDAC3ER,YAAA,CAUYgB,oBAAA;QATRC,KAAK,EAAC,IAAI;QACT,aAAW,EAAEpB,IAAA,CAAAqB,aAAa;QAC1BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAExB,IAAA,CAAAqB,aAAa;;0BACvB,MAIU,CAJVlB,YAAA,CAIUsB,kBAAA;UAJAC,KAAK,EAAE1B,IAAA,CAAA2B,OAAO;UAAEC,KAAK,EAAC;;4BAC9B,MAEe,CAFfzB,YAAA,CAEe0B,uBAAA;YAFDvB,KAAK,EAAC;UAAM;8BACxB,MAAkC,CAAlCH,YAAA,CAAkC2B,mBAAA;0BAAf9B,IAAA,CAAA2B,OAAO,CAACI,IAAI;yEAAZ/B,IAAA,CAAA2B,OAAO,CAACI,IAAI,GAAAP,MAAA;;;;;sCAGnCrB,YAAA,CAA0ES,oBAAA;UAA/DE,IAAI,EAAC,SAAS;UAAEE,OAAK,EAAAA,CAAA;YAAOhB,IAAA,CAAAgC,GAAG,CAACrB,KAAK,EAACX,IAAA,CAAA2B,OAAO;UAAA;;4BAAI,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}