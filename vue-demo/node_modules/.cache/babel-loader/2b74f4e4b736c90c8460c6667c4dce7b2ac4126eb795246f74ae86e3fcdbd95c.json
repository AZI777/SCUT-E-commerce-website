{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport { ref, onMounted, reactive } from \"vue\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nexport default {\n  __name: 'Cart',\n  setup(__props) {\n    const Buy = scope => {\n      console.log(scope);\n      dialogVisible.value = true;\n    };\n    const Pay = (scope, address) => {\n      console.log(scope.row);\n      var productid = scope.row.product.id;\n      var quantity = scope.row.quantity;\n      var product;\n      axios.get('/products', {\n        params: {\n          id: productid\n        }\n      }).then(response => {\n        product = response.data[0];\n        const new_product = {\n          id: product.id,\n          name: product.name,\n          price: product.price,\n          description: product.description,\n          quantity: product.quantity - quantity,\n          imageUrl: product.imageUrl\n        };\n        axios.put('/products', new_product).then(response => {\n          console.log(response.data);\n          const buyinfo = {\n            name: product.name,\n            total_price: product.price * quantity,\n            quantity: quantity,\n            mail: address.mail\n          };\n          console.log(buyinfo);\n          axios.post('/mail', buyinfo).then(response => {\n            console.log(response.data);\n            dialogVisible.value = false;\n            const loginfo = {\n              username: scope.row.user.username,\n              productid: scope.row.product.id,\n              productname: scope.row.product.name,\n              price: product.price,\n              quantity: quantity,\n              time: new Date(),\n              total: buyinfo.total_price\n            };\n            console.log(loginfo);\n            axios.post('/log', loginfo).then(response => {\n              console.log(response.data);\n              var id = scope.row.cartid;\n              axios.delete(`/cart/${id}`).then(response => {\n                console.log(response);\n                // 删除成功后刷新数据\n                fetchData();\n              }).catch(error => {\n                console.error(\"删除失败:\", error);\n              });\n            });\n          });\n        });\n      });\n    };\n    const Delete = item => {\n      var id = item.row.cartid;\n      console.log(item.row.cartid);\n      axios.delete(`/cart/${id}`).then(response => {\n        console.log(response);\n        // 删除成功后刷新数据\n        fetchData();\n      }).catch(error => {\n        console.error(\"删除失败:\", error);\n      });\n    };\n    const dialogVisible = ref(false);\n    const items = ref([]);\n    const address = reactive({\n      mail: ''\n    });\n    const fetchData = () => {\n      axios.get('/cart', {\n        params: {\n          username: store.state.user.username\n        }\n      }).then(response => {\n        items.value = response.data;\n      }).catch(error => {\n        console.error(\"导入购物车失败:\", error);\n      });\n    };\n    onMounted(fetchData);\n    return (_ctx, _cache) => {\n      const _component_el_table_column = _resolveComponent(\"el-table-column\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n      const _component_el_form = _resolveComponent(\"el-form\");\n      const _component_el_dialog = _resolveComponent(\"el-dialog\");\n      const _component_el_table = _resolveComponent(\"el-table\");\n      return _openBlock(), _createBlock(_component_el_table, {\n        data: items.value,\n        style: {\n          \"width\": \"100%\"\n        },\n        \"show-header\": false\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          prop: \"productname\",\n          label: \"商品名称\",\n          width: \"150\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"quantity\",\n          label: \"商品数量\",\n          width: \"120\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"price\",\n          label: \"商品价格\",\n          width: \"120\"\n        }), _createVNode(_component_el_table_column, {\n          fixed: \"right\",\n          label: \"Operations\",\n          width: \"120\"\n        }, {\n          default: _withCtx(scope => [_createVNode(_component_el_button, {\n            link: \"\",\n            type: \"primary\",\n            size: \"small\",\n            onClick: () => {\n              Buy(scope);\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"购买\")]),\n            _: 2\n          }, 1032, [\"onClick\"]), _createVNode(_component_el_button, {\n            link: \"\",\n            type: \"primary\",\n            size: \"small\",\n            onClick: () => {\n              Delete(scope);\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"删除\")]),\n            _: 2\n          }, 1032, [\"onClick\"]), _createVNode(_component_el_dialog, {\n            title: \"付款\",\n            \"model-value\": dialogVisible.value,\n            onClose: _cache[1] || (_cache[1] = $event => dialogVisible.value = false)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form, {\n              model: address,\n              class: \"form-container\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                label: \"邮箱地址\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_input, {\n                  modelValue: address.mail,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => address.mail = $event)\n                }, null, 8, [\"modelValue\"])]),\n                _: 1\n              })]),\n              _: 1\n            }, 8, [\"model\"]), _createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: () => {\n                Pay(scope, address);\n              }\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"付款\")]),\n              _: 2\n            }, 1032, [\"onClick\"])]),\n            _: 2\n          }, 1032, [\"model-value\"])]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"data\"]);\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}