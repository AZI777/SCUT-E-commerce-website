{"ast":null,"code":"import { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { onMounted, ref } from 'vue';\nimport { ElButton, ElDialog, ElTable, ElTableColumn } from 'element-plus';\nimport axios from \"axios\";\nexport default {\n  __name: 'Record',\n  setup(__props) {\n    const dialogVisible = ref(false);\n    const data = ref([]);\n    onMounted(() => {\n      fetchlog();\n    });\n    const fetchlog = () => {\n      axios.get('record').then(response => {\n        data.value = response.data;\n        console.log(data);\n      });\n    };\n    const openDialog = () => {\n      dialogVisible.value = true;\n    };\n    const closeDialog = () => {\n      dialogVisible.value = false;\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_unref(ElButton), {\n        onClick: openDialog,\n        class: \"recordbutton\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"查看报表\")]),\n        _: 1\n      }), _createVNode(_unref(ElDialog), {\n        \"model-value\": dialogVisible.value,\n        title: \"日志\",\n        onClose: closeDialog\n      }, {\n        default: _withCtx(() => [_createVNode(_unref(ElTable), {\n          data: data.value,\n          border: \"\",\n          fit: true\n        }, {\n          default: _withCtx(() => [_createVNode(_unref(ElTableColumn), {\n            prop: \"id\",\n            label: \"id\"\n          }), _createVNode(_unref(ElTableColumn), {\n            prop: \"user.username\",\n            label: \"用户名\"\n          }), _createVNode(_unref(ElTableColumn), {\n            prop: \"product.id\",\n            label: \"商品id\"\n          }), _createVNode(_unref(ElTableColumn), {\n            prop: \"productname\",\n            label: \"商品名\"\n          }), _createVNode(_unref(ElTableColumn), {\n            prop: \"price\",\n            label: \"单价\"\n          }), _createVNode(_unref(ElTableColumn), {\n            prop: \"quantity\",\n            label: \"数量\"\n          }), _createVNode(_unref(ElTableColumn), {\n            prop: \"total\",\n            label: \"总价\"\n          }), _createVNode(_unref(ElTableColumn), {\n            prop: \"time\",\n            label: \"时间\"\n          })]),\n          _: 1\n        }, 8, [\"data\"])]),\n        _: 1\n      }, 8, [\"model-value\"])]);\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","ElButton","ElDialog","ElTable","ElTableColumn","axios","dialogVisible","data","fetchlog","get","then","response","value","console","log","openDialog","closeDialog"],"sources":["C:/Users/DELL/Desktop/网络应用开发课程设计 - 副本/vue-demo/src/components/market/Record.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-button @click=\"openDialog\" class=\"recordbutton\">查看报表</el-button>\r\n    <el-dialog :model-value=\"dialogVisible\" title=\"日志\" @close=\"closeDialog\">\r\n      <el-table :data=\"data\" border :fit=\"true\">\r\n        <el-table-column prop=\"id\" label=\"id\"></el-table-column>\r\n        <el-table-column prop=\"user.username\" label=\"用户名\"></el-table-column>\r\n        <el-table-column prop=\"product.id\" label=\"商品id\"></el-table-column>\r\n        <el-table-column prop=\"productname\" label=\"商品名\"></el-table-column>\r\n        <el-table-column prop=\"price\" label=\"单价\"></el-table-column>\r\n        <el-table-column prop=\"quantity\" label=\"数量\"></el-table-column>\r\n        <el-table-column prop=\"total\" label=\"总价\"></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"时间\"></el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {onMounted, ref} from 'vue';\r\nimport {ElButton, ElDialog, ElTable, ElTableColumn} from 'element-plus';\r\nimport axios from \"axios\";\r\n\r\nconst dialogVisible = ref(false);\r\n\r\nconst data = ref([])\r\n\r\nonMounted(() => {\r\n  fetchlog()\r\n})\r\nconst fetchlog = () => {\r\n  axios.get('record').then(response => {\r\n    data.value = response.data;\r\n    console.log(data)\r\n  })\r\n}\r\n\r\nconst openDialog = () => {\r\n  dialogVisible.value = true;\r\n};\r\n\r\nconst closeDialog = () => {\r\n  dialogVisible.value = false;\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.recordbutton {\r\n  position: fixed;\r\n  top: 200px; /* 设置按钮距离顶部的位置 */\r\n  right: 20px; /* 设置按钮距离左侧的位置 */\r\n  z-index: 999; /* 设置按钮的层级，确保按钮在其他元素之上 */\r\n}\r\n</style>"],"mappings":";AAmBA,SAAQA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAClC,SAAQC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,aAAa,QAAO,cAAc;AACvE,OAAOC,KAAK,MAAM,OAAO;;;;IAEzB,MAAMC,aAAa,GAAGN,GAAG,CAAC,KAAK,CAAC;IAEhC,MAAMO,IAAI,GAAGP,GAAG,CAAC,EAAE,CAAC;IAEpBD,SAAS,CAAC,MAAM;MACdS,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC;IACF,MAAMA,QAAQ,GAAGA,CAAA,KAAM;MACrBH,KAAK,CAACI,GAAG,CAAC,QAAQ,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QACnCJ,IAAI,CAACK,KAAK,GAAGD,QAAQ,CAACJ,IAAI;QAC1BM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;MACvBT,aAAa,CAACM,KAAK,GAAG,IAAI;IAC5B,CAAC;IAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;MACxBV,aAAa,CAACM,KAAK,GAAG,KAAK;IAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}