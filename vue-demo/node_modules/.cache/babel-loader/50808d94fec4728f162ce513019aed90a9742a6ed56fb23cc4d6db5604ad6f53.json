{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"template\", null, [_createElementVNode(\"div\", null, [_createVNode(_component_el_table, {\n    data: _ctx.items\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.columns, column => {\n      return _openBlock(), _createBlock(_component_el_table_column, {\n        key: column.prop,\n        prop: column.prop,\n        label: column.label\n      }, null, 8 /* PROPS */, [\"prop\", \"label\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_el_table","data","_ctx","items","_Fragment","_renderList","columns","column","_createBlock","_component_el_table_column","key","prop","label"],"sources":["C:\\Users\\DELL\\Desktop\\网络应用开发课程设计\\vue-demo\\src\\components\\market\\Cart.vue"],"sourcesContent":["<script setup>\r\nimport {ref, onMounted} from \"vue\"\r\nimport axios from \"axios\";\r\nimport store from \"@/store\";\r\n\r\nconst items = ref([])\r\n\r\nconst columns = [\r\n  {prop: 'product_id', label: 'product_id'},\r\n  {prop: 'product_name', label: 'product_name'},\r\n  {prop: 'price', label: 'price'},\r\n  {prop: 'quantity', label: 'quantity'},\r\n];\r\n\r\n\r\nconst payload = {\r\n  username: store.state.user.username,\r\n}\r\n\r\nonMounted(() => {\r\n  axios.get('/cart',AxiosResponse<any>, any>('/api/users', {\r\n    params: {\r\n      username: 'your_username',\r\n    }, )\r\n      .then(response => {\r\n        console.log('成功导入:', response.data);\r\n        items.value = response.data;\r\n        console.log(items.value)\r\n      })\r\n      .catch(error => {\r\n        // 请求失败处理逻辑\r\n        console.error(\"导入购物车失败:\", error);\r\n      });\r\n})\r\n</script>\r\n\r\n<template>\r\n  <template>\r\n    <div>\r\n      <el-table :data=\"items\">\r\n        <el-table-column v-for=\"column in columns\" :key=\"column.prop\" :prop=\"column.prop\"\r\n                         :label=\"column.label\"></el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </template>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;;;uBAqCEA,mBAAA,CAOW,mBANTC,mBAAA,CAKM,cAJJC,YAAA,CAGWC,mBAAA;IAHAC,IAAI,EAAEC,IAAA,CAAAC;EAAK;sBACH,MAAyB,E,kBAA1CN,mBAAA,CACyDO,SAAA,QAAAC,WAAA,CADvBH,IAAA,CAAAI,OAAO,EAAjBC,MAAM;2BAA9BC,YAAA,CACyDC,0BAAA;QADbC,GAAG,EAAEH,MAAM,CAACI,IAAI;QAAGA,IAAI,EAAEJ,MAAM,CAACI,IAAI;QAC9DC,KAAK,EAAEL,MAAM,CAACK"},"metadata":{},"sourceType":"module","externalDependencies":[]}